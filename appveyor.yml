version: '1.0.0-{build}'

branches:
  only:
    - master

environment:
  auth_token:
    secure: rLuHhO0prerqoGCYmfOoyxqcwwamCXtuZtl4Jzqeu3aGgflk0mnX1fogLq68YcRW
  matrix:
#    - prepare_mode: YES
#      arch_name: none
#      build_tool: none
#      build_suite: none
    - prepare_mode: NO
      arch_name: x86
      build_tool: msvc
      build_suite: msvc2015
    - prepare_mode: NO
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      arch_name: x64
      build_tool: msvc
      build_suite: msvc2017
    - prepare_mode: NO
      arch_name: x86
      build_tool: mingw
      build_suite: mingw492_32

clone_folder: c:\dev\quentier-dependencies-windows

init:
  - if not %build_tool%==mingw set PATH=C:\Qt\5.9.2\%qt%\bin;%PATH%
  - if %build_tool%==mingw set PATH=C:\Qt\5.5\%qt%\bin;%PATH%
  - set ORIGPATH=%PATH%
  - if %build_suite%==msvc2017 set tool=VS2017_x64
  - if %build_suite%==msvc2015 set tool=VS2015_x86
  - if %build_suite%==mingw492_32 set tool=MinGW_x86
  - if %build_suite%==msvc2017 call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - if %build_suite%==msvc2015 call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" %platform%
  - if not %build_tool%==mingw (set makefiles="NMake Makefiles") else (set makefiles="MinGW Makefiles")
  - if %build_tool%==mingw set PATH=C:\MinGW\bin;C:\Program Files (x86)\CMake\bin;%PATH%
  - if %arch_name%==x86 set OPENSSL_ROOT_DIR=C:\OpenSSL-Win32 else set OPENSSL_ROOT_DIR=C:\OpenSSL-Win64
  - if not %build_suite%==msvc2017 set BOOST_ROOT=C:\Libraries\boost_1_63_0
  - if %build_suite%==msvc2017 set BOOST_ROOT=C:\Libraries\boost_1_65_1
  - if %build_suite%==msvc2017 set PATH="C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin";%PATH%
  - if %build_suite%==msvc2015 set PATH="C:\Program Files (x86)\MSBuild\14.0\Bin";%PATH%

#install:
#  - echo "Downloading ciuploadtool"
#  - md c:\dev\ciuploadtool
#  - cd c:\dev\ciuploadtool
#  - curl -fsSL https://github.com/d1vanov/ciuploadtool/releases/download/continuous-master/ciuploadtool_windows_x86.zip -o ciuploadtool_windows_x86.zip
#  - 7z x ciuploadtool_windows_x86.zip
#  - if %prepare_mode%==YES c:\dev\ciuploadtool\ciuploadtool.exe -preponly -suffix="%APPVEYOR_REPO_BRANCH%"
#  - ps: if ($env:prepare_mode -eq "YES") { throw "Failing in order to stop the current build matrix job early" }

build_script:
  - cd c:\dev
  - echo "Building libiconv"
# MSVC branch
  - if not %build_tool%==mingw git clone https://github.com/kiyolee/libiconv-win-build.git libiconv-win-build
  - if not %build_tool%==mingw cd libiconv-win-build
  - if %build_suite%==msvc2015 cd build-VS2015
  - if %build_suite%==msvc2015 msbuild libiconv.sln /p:Configuration="Release" /p:Platform="Win32" /clp:ErrorsOnly
  - if %build_suite%==msvc2017 cd build-VS2017
  - if %build_suite%==msvc2017 msbuild libiconv.sln /p:Configuration="Release" /p:Platform="x64" /clp:ErrorsOnly
  - if not %build_tool%==mingw md installdir
  - if not %build_tool%==mingw md installdir\bin
  - if not %build_tool%==mingw md installdir\lib
  - if not %build_tool%==mingw md installdir\include
  - if %build_tool%==msvc2015 copy Release\libiconv.dll installdir\bin\libiconv.dll
  - if %build_tool%==msvc2015 copy Release\libiconv.pdb installdir\bin\libiconv.pdb
  - if %build_suite%==msvc2015 copy Release\libiconv.lib installdir\lib\libiconv.lib
  - if %build_suite%==msvc2017 copy x64\Release\libiconv.dll installdir\bin\libiconv.dll
  - if %build_suite%==msvc2017 copy x64\Release\libiconv.pdb installdir\bin\libiconv.pdb
  - if %build_suite%==msvc2017 copy x64\Release\libiconv.lib installdir\bin\libiconv.lib
  - if not %build_tool%==mingw copy ..\include\iconv.h installdir\include
# MinGW branch
  - if %build_tool%==mingw md libiconv-win-build
  - if %build_tool%==mingw cd libiconv-win-build
  - if %build_tool%==mingw curl -fsSL https://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.15.tar.gz -o libiconv-1.15.tar.gz
  - if %build_tool%==mingw 7z x libiconv-1.15.tar.gz
  - if %build_tool%==mingw 7z x libiconv-1.15.tar
  - if %build_tool%==mingw del libiconv-1.15.tar
  - if %build_tool%==mingw del libiconv-1.15.tar.gz
  - if %build_tool%==mingw cd libiconv-1.15
  - if %build_suite%==mingw492_32 C:\cygwin\bin\bash -lc "cd /cygdrive/c/dev/libiconv-win-build/libiconv-1.15 && export PATH=/usr/local/mingw32/bin:$PATH && ./configure --host=i686-w64-mingw32 --prefix=$(pwd)/installdir CC=i686-w64-mingw32-gcc CPPFLAGS='-I/usr/local/mingw32/include -Wall' LDFLAGS='-L/usr/local/mingw32/lib' && make && make check && make install"
# Finalization
  - cd installdir
  - set PATH=%cd%\bin;%PATH%
  - set LIB=%cd%\lib;%LIB%
  - set INCLUDE=%cd%\include;%INCLUDE%
  - 7z a libiconv-%build_suite%_%arch_name%.zip *
  - mv libiconv-%build_suite%_%arch_name%.zip %APPVEYOR_BUILD_FOLDER%
  - echo INCLUDE = %INCLUDE%, PATH = %PATH%, LIB = %LIB%

artifacts:
  - path: '*.zip'
    name: archive

matrix:
  fast_finish: true
  allow_failures:
    - prepare_mode: YES
