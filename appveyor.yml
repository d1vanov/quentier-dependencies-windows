version: '1.0.0-{build}'

branches:
 only:
   - master

environment:
 auth_token:
   secure: rLuHhO0prerqoGCYmfOoyxqcwwamCXtuZtl4Jzqeu3aGgflk0mnX1fogLq68YcRW
 matrix:
   - prepare_mode: YES
     arch_name: none
     build_tool: none
     build_suite: none
   - prepare_mode: NO
     arch_name: x86
     build_tool: msvc
     build_suite: msvc2015
     qt: msvc2015
   - prepare_mode: NO
     APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
     arch_name: x64
     build_tool: msvc
     build_suite: msvc2017
     qt: msvc2017_64
   - prepare_mode: NO
     APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
     arch_name: x86
     build_tool: mingw
     build_suite: mingw530
     qt: mingw492_32
     HOST: i686-w64-mingw32
     platform: Win32
     configuration: Release

clone_folder: c:\dev\quentier-dependencies-windows

init:
  - if not %build_tool%==mingw set PATH=C:\Qt\5.10\%qt%\bin;%PATH%
  - if %build_tool%==mingw set PATH=C:\Qt\5.5\%qt%\bin;%PATH%
  - set ORIGPATH=%PATH%
  - if %build_suite%==msvc2017 set tool=VS2017_x64
  - if %build_suite%==msvc2015 set tool=VS2015_x86
  - if %build_suite%==mingw530 set tool=MinGW_x86
  - if %build_suite%==msvc2017 call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - if %build_suite%==msvc2015 call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" %platform%
  - if not %build_tool%==mingw (set makefiles="NMake Makefiles") else (set makefiles="MinGW Makefiles")
  - if %build_tool%==mingw set PATH=C:\MinGW\bin;C:\Program Files (x86)\CMake\bin;%PATH%
  - if %build_suite%==msvc2017 set PATH=C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin;%PATH%
  - if %build_suite%==msvc2015 set PATH=C:\Program Files (x86)\MSBuild\14.0\Bin;%PATH%

install:
  - echo "Downloading ciuploadtool"
  - md c:\dev\ciuploadtool
  - cd c:\dev\ciuploadtool
  - curl -fsSL https://github.com/d1vanov/ciuploadtool/releases/download/continuous-master/ciuploadtool_windows_x86.zip -o ciuploadtool_windows_x86.zip
  - 7z x ciuploadtool_windows_x86.zip
  - if %prepare_mode%==YES c:\dev\ciuploadtool\ciuploadtool.exe -preponly
  - ps: if ($env:prepare_mode -eq "YES") { throw "Failing in order to stop the current build matrix job early" }
# Get NASM (required to build OpenSSL for MinGW)
  - if %build_tool%==mingw md c:\dev\nasm
  - if %build_tool%==mingw cd c:\dev\nasm
  - if %build_tool%==mingw curl -fsSL http://libgd.blob.core.windows.net/nasm/nasm-2.07-installer.exe -o nasminst.exe
  - if %build_tool%==mingw start /wait nasminst.exe /S
  - if %build_tool%==mingw set PATH=C:\Program Files (x86)\nasm;%PATH%
# Set build scripts directory
  - if %build_tool%==mingw set SCRIPTSDIR=c:\dev\quentier-dependencies-windows\scripts\mingw530_x86
  - if %build_suite%==msvc2015 set SCRIPTSDIR=c:\dev\quentier-dependencies-windows\scripts\msvc2015_x86
  - if %build_suite%==msvc2017 set SCRIPTSDIR=c:\dev\quentier-dependencies-windows\scripts\msvc2017_x64

build_script:
# Boost
  - if not exist %APPVEYOR_BUILD_FOLDER%\boost-1_65_0-%build_suite%_%arch_name%.zip %SCRIPTSDIR%\build_boost.bat else echo "Using cached version of boost"
# openssl
  - if not exist %APPVEYOR_BUILD_FOLDER%\openssl-1_0_2r-%build_suite%_%arch_name%.zip %SCRIPTSDIR%\build_openssl.bat else echo "Using cached version of openssl"
# libiconv
  - if not exist %APPVEYOR_BUILD_FOLDER%\libiconv-1.15-%build_suite%_%arch_name%.zip %SCRIPTSDIR%\build_libiconv.bat else echo "Using cached version of libiconv"
# zlib
  - if not exist %APPVEYOR_BUILD_FOLDER%\zlib-1.2.11-%build_suite%_%arch_name%.zip %SCRIPTSDIR%\build_zlib.bat else echo "Using cached version of zlib"
# libxml2
  - if not exist %APPVEYOR_BUILD_FOLDER%\libxml2-2.9.7-%build_suite%_%arch_name%.zip %SCRIPTSDIR%\build_libxml2.bat else echo "Using cached version of libxml2"
# libhunspell
  - if not %build_tool%==mingw set HUNSPELL_VERSION=1.7.0
  - if %build_tool%==mingw set HUNSPELL_VERSION=1.6.2
  - if not exist %APPVEYOR_BUILD_FOLDER%\libhunspell-%HUNSPELL_VERSION%-%build_suite%_%arch_name%.zip %SCRIPTSDIR%\build_libhunspell.bat else echo "Using cached version of libhunspell"
# tidy-html5
  - cd c:\dev
  - echo "Building tidy-html5"
  - git clone https://github.com/htacg/tidy-html5.git
  - cd tidy-html5
  - git checkout 5.6.0
  - md build-tidy
  - cd build-tidy
  - if %build_tool%==mingw set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - if not %build_tool%==mingw C:\msys64\usr\bin\bash -lc "cd /c/dev/tidy-html5 && echo 'install(FILES $<TARGET_PDB_FILE:${name}> DESTINATION bin OPTIONAL)' >> CMakeLists.txt"
  - cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIB=ON -DCMAKE_INSTALL_PREFIX="c:\dev\tidy-html5\build-tidy\installdir"
  - cmake --build . --target all
  - cmake --build . --target install
  - if not %build_tool%==mingw copy c:\dev\tidy-html5\build-tidy\CMakeFiles\tidy-static.dir\tidy-static.pdb c:\dev\tidy-html5\build-tidy\installdir\lib\
  - if %build_tool%==mingw set PATH=%PATH%;C:\Program Files\Git\usr\bin
# Finalization
  - cd installdir
  - set PATH=%PATH%;%cd%\bin
  - set LIB=%LIB%;%cd%\lib
  - set INCLUDE=%INCLUDE%;%cd%\include
  - 7z a tidy-html5-5.6.0-%build_suite%_%arch_name%.zip *
  - mv tidy-html5-5.6.0-%build_suite%_%arch_name%.zip %APPVEYOR_BUILD_FOLDER%
# qtkeychain
  - cd c:\dev
  - echo "Building qtkeychain"
  - git clone https://github.com/frankosterfeld/qtkeychain.git
  - cd c:\dev\qtkeychain
  - git checkout v0.9.1
  - if %build_suite%==mingw530 C:\msys64\usr\bin\bash -lc "cd /c/dev/qtkeychain && sed -i s/SecureZeroMemory/ZeroMemory/g keychain_win.cpp"
  - md build
  - cd build
  - if %build_tool%==mingw set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - if not %build_tool%==mingw C:\msys64\usr\bin\bash -lc "cd /c/dev/qtkeychain && echo 'install(FILES $<TARGET_PDB_FILE:${QTKEYCHAIN_TARGET_NAME}> DESTINATION bin OPTIONAL)' >> CMakeLists.txt"
  - if not %build_tool%==mingw cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DUSE_CREDENTIAL_STORE=OFF -DBUILD_TEST_APPLICATION=OFF -DCMAKE_INSTALL_PREFIX="c:\dev\qtkeychain\build\installdir" -DCMAKE_PREFIX_PATH="C:/Qt/5.10/%qt%" -DCMAKE_CXX_FLAGS="/wd4365 /wd4464 /wd4571 /wd4577 /wd4619 /wd4625 /wd4626 /wd4668 /wd4710 /wd4774 /wd4820 /wd4946 /wd5026 /wd5027"
  - if %build_tool%==mingw cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DUSE_CREDENTIAL_STORE=OFF -DBUILD_TEST_APPLICATION=OFF -DCMAKE_INSTALL_PREFIX="c:\dev\qtkeychain\build\installdir" -DCMAKE_PREFIX_PATH="C:/Qt/5.5/%qt%"
  - cmake --build . --target all
  - cmake --build . --target install
  - if %build_tool%==mingw set PATH=%PATH%;C:\Program Files\Git\usr\bin
# Finalization
  - cd installdir
  - set PATH=%PATH%;%cd%\bin
  - set LIB=%LIB%;%cd%\lib
  - set INCLUDE=%INCLUDE%;%cd%\include
  - 7z a qtkeychain-0.9.1-%build_suite%_%arch_name%.zip *
  - mv qtkeychain-0.9.1-%build_suite%_%arch_name%.zip %APPVEYOR_BUILD_FOLDER%
# Google breakpad
  - cd c:\dev
  - echo "Building breakpad"
# MSVC branch (use the official Google breakpad version)
  - if not %build_tool%==mingw git clone https://chromium.googlesource.com/breakpad/breakpad
  - if not %build_tool%==mingw cd breakpad
  - if not %build_tool%==mingw git checkout chrome_64
  - if not %build_tool%==mingw cd src
  - if not %build_tool%==mingw git clone https://github.com/google/googletest.git testing
  - if not %build_tool%==mingw cd ..\..
  - if not %build_tool%==mingw git clone https://chromium.googlesource.com/external/gyp
  - if not %build_tool%==mingw cd gyp
  - if not %build_tool%==mingw python setup.py install
  - if not %build_tool%==mingw cd ..\breakpad
  - if not %build_tool%==mingw md installdir
  - if not %build_tool%==mingw md installdir\include\breakpad\client\windows
  - if not %build_tool%==mingw md installdir\include\breakpad\common\windows
  - if not %build_tool%==mingw md installdir\lib
  - if not %build_tool%==mingw md installdir\bin
  - if not %build_tool%==mingw xcopy src installdir\include\breakpad /e
  - |
    if not %build_tool%==mingw C:\msys64\usr\bin\bash -lc "cd /c/dev/breakpad/src/build && sed -i -e \"s/'WarnAsError': 'true'/'WarnAsError': 'false'/g\" common.gypi"
  - if not %build_tool%==mingw ..\gyp\gyp.bat src\client\windows\breakpad_client.gyp --no-circular-check -Dwin_release_RuntimeLibrary=2 -Dwin_debug_RuntimeLibrary=3
  - if not %build_tool%==mingw cd src\client\windows
  - if %build_suite%==msvc2015 msbuild breakpad_client.sln /p:Configuration="Release" /p:Platform="Win32" /clp:ErrorsOnly
  - if %build_suite%==msvc2015 msbuild breakpad_client.sln /p:Configuration="Debug" /p:Platform="Win32" /clp:ErrorsOnly
  - if %build_suite%==msvc2017 msbuild breakpad_client.sln /p:Configuration="Release" /p:Platform="x64" /clp:ErrorsOnly
  - if %build_suite%==msvc2017 msbuild breakpad_client.sln /p:Configuration="Debug" /p:Platform="x64" /clp:ErrorsOnly
  - if not %build_tool%==mingw copy Release\lib\common.lib c:\dev\breakpad\installdir\lib
  - if not %build_tool%==mingw copy Release\lib\crash_generation_client.lib c:\dev\breakpad\installdir\lib
  - if not %build_tool%==mingw copy Release\lib\crash_generation_server.lib c:\dev\breakpad\installdir\lib
  - if not %build_tool%==mingw copy Release\lib\exception_handler.lib c:\dev\breakpad\installdir\lib
  - if not %build_tool%==mingw copy Debug\lib\common.lib c:\dev\breakpad\installdir\lib\common_d.lib
  - if not %build_tool%==mingw copy Debug\lib\crash_generation_client.lib c:\dev\breakpad\installdir\lib\crash_generation_client_d.lib
  - if not %build_tool%==mingw copy Debug\lib\crash_generation_server.lib c:\dev\breakpad\installdir\lib\crash_generation_server_d.lib
  - if not %build_tool%==mingw copy Debug\lib\exception_handler.lib c:\dev\breakpad\installdir\lib\exception_handler_d.lib
  - if not %build_tool%==mingw copy Debug\common.pdb c:\dev\breakpad\installdir\bin\
  - if not %build_tool%==mingw copy Debug\crash_generation_client.pdb c:\dev\breakpad\installdir\bin\
  - if not %build_tool%==mingw copy Debug\crash_generation_server.pdb c:\dev\breakpad\installdir\bin\
  - if not %build_tool%==mingw copy Debug\exception_handler.pdb c:\dev\breakpad\installdir\bin\
  - if not %build_tool%==mingw cd c:\dev\breakpad
  - if not %build_tool%==mingw ..\gyp\gyp.bat src\tools\windows\tools_windows.gyp --no-circular-check -Dwin_release_RuntimeLibrary=2 -Dwin_debug_RuntimeLibrary=3
  - if not %build_tool%==mingw cd src\tools\windows
  - if %build_suite%==msvc2015 msbuild tools_windows.sln /p:Configuration="Release" /p:Platform="Win32" /clp:ErrorsOnly
  - if %build_suite%==msvc2017 msbuild tools_windows.sln /p:Configuration="Release" /p:Platform="x64"  /clp:ErrorsOnly
  - if not %build_tool%==mingw copy Release\dump_syms.exe c:\dev\breakpad\installdir\bin
# MinGW branch (use breakpad fork capable of understanding the debug info from MinGW built binaries)
  - if %build_tool%==mingw md breakpad
  - if %build_tool%==mingw git clone https://github.com/d1vanov/google-breakpad.git breakpad
  - if %build_tool%==mingw cd breakpad
  - if %build_tool%==mingw git checkout pecoff-dwarf-on-git-20171117
  - if %build_tool%==mingw set APPVEYOR_BUILD_FOLDER_BAK=%APPVEYOR_BUILD_FOLDER%
  - if %build_tool%==mingw set APPVEYOR_BUILD_FOLDER=%cd%
  - if %build_tool%==mingw set PATH_BEFORE=%PATH%
  - if %build_tool%==mingw set HOST=i686-w64-mingw32
  - if %build_tool%==mingw set Configuration=Release
  - if %build_tool%==mingw call scripts\appveyor-gcc.bat install
  - if %build_tool%==mingw call scripts\appveyor-gcc.bat build_script
  - if %build_tool%==mingw call scripts\appveyor-gcc.bat test_script
  - if %build_tool%==mingw set PATH=%PATH_BEFORE%
  - if %build_tool%==mingw set APPVEYOR_BUILD_FOLDER=%APPVEYOR_BUILD_FOLDER_BAK%
  - if %build_tool%==mingw mv staging\usr installdir
  - if %build_tool%==mingw md installdir\include\breakpad\client\windows
  - if %build_tool%==mingw md installdir\include\breakpad\common\windows
  - if %build_tool%==mingw xcopy src installdir\include\breakpad /e /y
# Finalization
  - cd c:\dev\breakpad\installdir\bin
  - curl -fsSL http://hg.mozilla.org/build/tools/raw-file/755e58ebc9d4/breakpad/win32/minidump_stackwalk.exe -o minidump_stackwalk.exe
  - curl -fsSL http://hg.mozilla.org/build/tools/raw-file/755e58ebc9d4/breakpad/win32/cygwin1.dll -o cygwin1.dll
  - curl -fsSL http://hg.mozilla.org/build/tools/raw-file/755e58ebc9d4/breakpad/win32/cygstdc++-6.dll -o cygstdc++-6.dll
  - curl -fsSL http://hg.mozilla.org/build/tools/raw-file/755e58ebc9d4/breakpad/win32/cyggcc_s-1.dll -o cyggcc_s-1.dll
  - cd ..
  - set LIB=%cd%\lib;%LIB%
  - set INCLUDE=%cd%\include;%INCLUDE%
  - set PATH=%cd%\bin;%PATH%
  - 7z a breakpad-%build_suite%_%arch_name%.zip *
  - mv breakpad-%build_suite%_%arch_name%.zip %APPVEYOR_BUILD_FOLDER%
# libbacktrace, only for MinGW
  - if %build_tool%==mingw cd c:\dev
  - if %build_tool%==mingw echo "Building libbacktrace"
  - if %build_tool%==mingw git clone https://github.com/ianlancetaylor/libbacktrace.git
  - if %build_tool%==mingw cd libbacktrace
  - if %build_tool%==mingw C:\msys64\usr\bin\bash -lc "cd /c/dev/libbacktrace && CC=C:/MinGW/bin/gcc CXX=C:/MinGW/bin/g++ ./configure --prefix=$(pwd)/installdir --host=i386-unknown-mingw32 && make && make install"
  - if %build_tool%==mingw cd installdir
  - if %build_tool%==mingw 7z a libbacktrace-%build_suite%_%arch_name%.zip *
  - if %build_tool%==mingw mv libbacktrace-%build_suite%_%arch_name%.zip %APPVEYOR_BUILD_FOLDER%

after_build:
  - cd %APPVEYOR_BUILD_FOLDER%
  - c:\dev\ciuploadtool\ciuploadtool.exe *.zip

artifacts:
 - path: '*.zip'
   name: archive

matrix:
  fast_finish: true
  allow_failures:
   - prepare_mode: YES
