version: '1.0.0-{build}'

branches:
 only:
   - master

environment:
 auth_token:
   secure: rLuHhO0prerqoGCYmfOoyxqcwwamCXtuZtl4Jzqeu3aGgflk0mnX1fogLq68YcRW
 matrix:
   - prepare_mode: YES
     arch_name: none
     build_tool: none
     build_suite: none
   - prepare_mode: NO
     arch_name: x86
     build_tool: msvc
     build_suite: msvc2015
     qt: msvc2015
   - prepare_mode: NO
     APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
     arch_name: x64
     build_tool: msvc
     build_suite: msvc2017
     qt: msvc2017_64
   - prepare_mode: NO
     arch_name: x86
     build_tool: mingw
     build_suite: mingw492_32
     qt: mingw492_32
     CACHE: C:\cache
     HOST: i686-w64-mingw32
     platform: Win32
     configuration: Release

clone_folder: c:\dev\quentier-dependencies-windows

init:
  - if not %build_tool%==mingw set PATH=C:\Qt\5.9.2\%qt%\bin;%PATH%
  - if %build_tool%==mingw set PATH=C:\Qt\5.5\%qt%\bin;%PATH%
  - set ORIGPATH=%PATH%
  - if %build_suite%==msvc2017 set tool=VS2017_x64
  - if %build_suite%==msvc2015 set tool=VS2015_x86
  - if %build_suite%==mingw492_32 set tool=MinGW_x86
  - if %build_suite%==msvc2017 call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - if %build_suite%==msvc2015 call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" %platform%
  - if not %build_tool%==mingw (set makefiles="NMake Makefiles") else (set makefiles="MinGW Makefiles")
  - if %build_tool%==mingw set PATH=C:\MinGW\bin;C:\Program Files (x86)\CMake\bin;%PATH%
  - if %arch_name%==x86 set OPENSSL_ROOT_DIR=C:\OpenSSL-Win32 else set OPENSSL_ROOT_DIR=C:\OpenSSL-Win64
  - if not %build_suite%==msvc2017 set BOOST_ROOT=C:\Libraries\boost_1_63_0
  - if %build_suite%==msvc2017 set BOOST_ROOT=C:\Libraries\boost_1_65_1
  - if %build_suite%==msvc2017 set PATH="C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin";%PATH%
  - if %build_suite%==msvc2015 set PATH="C:\Program Files (x86)\MSBuild\14.0\Bin";%PATH%

install:
  - echo "Downloading ciuploadtool"
  - md c:\dev\ciuploadtool
  - cd c:\dev\ciuploadtool
  - curl -fsSL https://github.com/d1vanov/ciuploadtool/releases/download/continuous-master/ciuploadtool_windows_x86.zip -o ciuploadtool_windows_x86.zip
  - 7z x ciuploadtool_windows_x86.zip
  - if %prepare_mode%==YES c:\dev\ciuploadtool\ciuploadtool.exe -preponly
  - ps: if ($env:prepare_mode -eq "YES") { throw "Failing in order to stop the current build matrix job early" }

build_script:
  - cd c:\dev
# libiconv
  - echo "Building libiconv"
# MSVC branch
  - if not %build_tool%==mingw git clone https://github.com/kiyolee/libiconv-win-build.git libiconv-win-build
  - if not %build_tool%==mingw cd libiconv-win-build
  - if %build_suite%==msvc2015 cd build-VS2015
  - if %build_suite%==msvc2015 msbuild libiconv.sln /p:Configuration="Release" /p:Platform="Win32" /clp:ErrorsOnly
  - if %build_suite%==msvc2017 cd build-VS2017
  - if %build_suite%==msvc2017 msbuild libiconv.sln /p:Configuration="Release" /p:Platform="x64" /clp:ErrorsOnly
  - if not %build_tool%==mingw md installdir
  - if not %build_tool%==mingw md installdir\bin
  - if not %build_tool%==mingw md installdir\lib
  - if not %build_tool%==mingw md installdir\include
  - if %build_tool%==msvc2015 copy Release\libiconv.dll installdir\bin\libiconv.dll
  - if %build_tool%==msvc2015 copy Release\libiconv.pdb installdir\bin\libiconv.pdb
  - if %build_suite%==msvc2015 copy Release\libiconv.lib installdir\lib\libiconv.lib
  - if %build_suite%==msvc2017 copy x64\Release\libiconv.dll installdir\bin\libiconv.dll
  - if %build_suite%==msvc2017 copy x64\Release\libiconv.pdb installdir\bin\libiconv.pdb
  - if %build_suite%==msvc2017 copy x64\Release\libiconv.lib installdir\lib\libiconv.lib
  - if not %build_tool%==mingw copy ..\include\iconv.h installdir\include
# MinGW branch
  - if %build_tool%==mingw md libiconv-win-build
  - if %build_tool%==mingw cd libiconv-win-build
  - if %build_tool%==mingw curl -fsSL https://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.15.tar.gz -o libiconv-1.15.tar.gz
  - if %build_tool%==mingw 7z x libiconv-1.15.tar.gz
  - if %build_tool%==mingw 7z x libiconv-1.15.tar
  - if %build_tool%==mingw del libiconv-1.15.tar
  - if %build_tool%==mingw del libiconv-1.15.tar.gz
  - if %build_tool%==mingw cd libiconv-1.15
  - if %build_suite%==mingw492_32 C:\cygwin\bin\bash -lc "cd /cygdrive/c/dev/libiconv-win-build/libiconv-1.15 && export PATH=/usr/local/mingw32/bin:$PATH && ./configure --host=i686-w64-mingw32 --prefix=$(pwd)/installdir CC=i686-w64-mingw32-gcc CPPFLAGS='-I/usr/local/mingw32/include -Wall' LDFLAGS='-L/usr/local/mingw32/lib' && make && make check && make install"
# Finalization
  - cd installdir
  - set PATH=%cd%\bin;%PATH%
  - set LIB=%cd%\lib;%LIB%
  - set INCLUDE=%cd%\include;%INCLUDE%
  - 7z a libiconv-%build_suite%_%arch_name%.zip *
  - mv libiconv-%build_suite%_%arch_name%.zip %APPVEYOR_BUILD_FOLDER%
# zlib
  - cd c:\dev
  - echo "Building zlib"
# MSVC branch
  - if not %build_tool%==mingw git clone https://github.com/kiyolee/zlib-win-build.git zlib-win-build
  - if not %build_tool%==mingw cd zlib-win-build
  - if %build_suite%==msvc2015 cd build-VS2015
  - if %build_suite%==msvc2015 msbuild zlib.sln /p:Configuration="Release" /p:Platform="Win32" /clp:ErrorsOnly
  - if %build_suite%==msvc2017 cd build-VS2017
  - if %build_suite%==msvc2017 msbuild zlib.sln /p:Configuration="Release" /p:Platform="x64" /clp:ErrorsOnly
  - if not %build_tool%==mingw md installdir
  - if not %build_tool%==mingw md installdir\include
  - if not %build_tool%==mingw md installdir\bin
  - if not %build_tool%==mingw md installdir\lib
  - if %build_suite%==msvc2015 copy Release\libz.dll installdir\bin\libz.dll
  - if %build_suite%==msvc2015 copy Release\libz.lib installdir\lib\libz.lib
  - if %build_suite%==msvc2017 copy x64\Release\libz.dll installdir\bin\libz.dll
  - if %build_suite%==msvc2017 copy x64\Release\libz.lib installdir\lib\libz.lib
  - if not %build_tool%==mingw copy ..\zlib.h installdir\include
  - if not %build_tool%==mingw copy ..\zconf.h installdir\include
  - if not %build_tool%==mingw set ZLIB_LIBRARIES=%cd%\installdir\lib\libz.lib
  - if not %build_tool%==mingw set ZLIB_INCLUDE_DIRS=%cd\installdir\include
# MinGW branch
  - if %build_tool%==mingw md zlib-win-build
  - if %build_tool%==mingw cd zlib-win-build
  - if %build_tool%==mingw curl -fsSL https://zlib.net/zlib-1.2.11.tar.gz -o zlib-1.2.11.tar.gz
  - if %build_tool%==mingw 7z x zlib-1.2.11.tar.gz
  - if %build_tool%==mingw 7z x zlib-1.2.11.tar
  - if %build_tool%==mingw del zlib-1.2.11.tar
  - if %build_tool%==mingw del zlib-1.2.11.tar.gz
  - if %build_tool%==mingw cd zlib-1.2.11
  - if %build_tool%==mingw C:\MinGW\bin\mingw32-make.exe install -f win32\Makefile.gcc INCLUDE_PATH=%cd%\installdir\include BINARY_PATH=%cd%\installdir\bin LIBRARY_PATH=%cd%\installdir\lib SHARED_MODE=1
  - if %build_tool%==mingw set ZLIB_LIBRARIES=%cd%\installdir\lib\libz.dll.a
  - if %build_tool%==mingw set ZLIB_INCLUDE_DIRS=%cd%\installdir\include
# Finalization
  - cd installdir
  - set PATH=%cd%\bin;%PATH%
  - set LIB=%cd%\lib;%LIB%
  - set INCLUDE=%cd%\include;%INCLUDE%
  - 7z a zlib-%build_suite%_%arch_name%.zip *
  - mv zlib-%build_suite%_%arch_name%.zip %APPVEYOR_BUILD_FOLDER%
# libxml2
  - cd c:\dev
  - echo "Building libxml2"
# MSVC branch
  - if not %build_tool%==mingw git clone https://github.com/kiyolee/libxml2-win-build.git libxml2-win-build
  - if not %build_tool%==mingw cd libxml2-win-build
  - if %build_suite%==msvc2015 cd build-VS2015
  - if %build_suite%==msvc2015 msbuild libxml2.sln /p:Configuration="Release" /p:Platform="x86" /clp:ErrorsOnly
  - if %build_suite%==msvc2017 cd build-VS2017
  - if %build_suite%==msvc2017 msbuild libxml2.sln /p:Configuration="Release" /p:Platform="x64" /clp:ErrorsOnly
  - if not %build_tool%==mingw md installdir
  - if not %build_tool%==mingw md installdir\include
  - if not %build_tool%==mingw md installdir\bin
  - if not %build_tool%==mingw md installdir\lib
  - if %build_suite%==msvc2015 copy Release\libxml2.dll installdir\bin\libxml2.dll
  - if %build_suite%==msvc2015 copy Release\libxml2.lib installdir\lib\libxml2.lib
  - if %build_suite%==msvc2017 copy x64\Release\libxml2.dll installdir\bin\libxml2.dll
  - if %build_suite%==msvc2017 copy x64\Release\libxml2.lib installdir\lib\libxml2.lib
  - if not %build_tool%==mingw xcopy ..\include installdir\include /e
# MinGW branch
  - if %build_tool%==mingw git clone git://git.gnome.org/libxml2
  - if %build_tool%==mingw cd libxml2
  - if %build_tool%==mingw git checkout v2.9.7
  - if %build_tool%==mingw cd win32
# NOTE: need to rename the import library for libxml2.dll
  - if %build_tool%==mingw C:\msys64\usr\bin\bash -lc "cd /c/dev/libxml2/win32 && sed -i -e s/\$\(XML_BASENAME\)\.lib/\$\(XML_BASENAME\).dll.a/g Makefile.mingw"
  - if %build_tool%==mingw set INCLUDEBAK=%INCLUDE%
  - if %build_tool%==mingw set INCLUDE=-Ic:/dev/libiconv-win-build/libiconv-1.15/installdir/include
  - if %build_tool%==mingw set LIBBAK=%LIB%
  - if %build_tool%==mingw set LIB=-Lc:/dev/libiconv-win-build/libiconv-1.15/installdir/lib
  - if %build_tool%==mingw set
  - if %build_tool%==mingw cscript configure.js compiler=mingw prefix=%cd%\installdir debug=no http=no ftp=no
  - if %build_tool%==mingw set
  - if %build_tool%==mingw C:\MinGW\bin\mingw32-make.exe install -f Makefile.mingw
  - if %build_tool%==mingw set INCLUDE=%INCLUDEBAK%
  - if %build_tool%==mingw set LIB=%LIBBAK%
# NOTE: removing the statuc libxml2.a library as CMake seems to prefer it over the shared library yet this statuc library
# requires the target application to explicitly link to libiconv which is not desired
  - if %build_tool%==mingw del installdir\lib\libxml2.a
# Finalization
  - cd installdir
  - set PATH=%cd%\bin;%PATH%
  - set LIB=%cd%\lib;%LIB%
  - set INCLUDE=%cd%\include;%INCLUDE%
  - set LIBXML2_INCLUDE_DIR=%cd%\include
  - if %build_tool%==mingw set LIBXML2_LIBRARIES=%cd%\bin\libxml2.dll
  - if not %build_tool%==mingw set LIBXML2_LIBRARIES=%cd%\lib\libxml2.lib
  - 7z a libxml2-%build_suite%_%arch_name%.zip *
  - mv libxml2-%build_suite%_%arch_name%.zip %APPVEYOR_BUILD_FOLDER%
# libhunspell
  - cd c:\dev
  - echo "Building hunspell"
  - git clone https://github.com/hunspell/hunspell.git hunspell
  - cd c:\dev\hunspell
  - git checkout v1.6.2
  - md installdir
  - md installdir\include
  - md installdir\include\hunspell
  - md installdir\lib
  - md installdir\bin
# MSVC branch
  - if %build_suite%==msvc2015 MSBuild %cd%\msvc\Hunspell.sln /p:Configuration="Release_dll" /p:Platform="Win32" /clp:ErrorsOnly
  - if %build_suite%==msvc2015 copy msvc\Release_dll\libhunspell\libhunspell.lib installdir\lib\
  - if %build_suite%==msvc2015 copy msvc\Release_dll\libhunspell\libhunspell.dll installdir\bin\
  - if %build_suite%==msvc2017 MSBuild %cd%\msvc\Hunspell.sln /p:Configuration="Release_dll" /p:Platform="x64" /clp:ErrorsOnly
  - if %build_suite%==msvc2017 copy msvc\x64\Release_dll\libhunspell.lib installdir\lib\
  - if %build_suite%==msvc2017 copy msvc\x64\Release_dll\libhunspell.dll installdir\bin\
  - if not %build_tool%==mingw xcopy src\hunspell installdir\include\hunspell /e
# MinGW branch
# NOTE: need to apply a small patch for building with MinGW
  - if %build_suite%==mingw492_32 C:\msys64\usr\bin\bash -lc "cd /c/dev/hunspell && autoreconf -i && sed -i -e s/\ \|\ S_IRWXG\ \|\ S_IRWXO//g src/tools/hzip.cxx && CC=C:/MinGW/bin/gcc CXX=C:/MinGW/bin/g++ ./configure --prefix=$(pwd)/installdir --host=i386-unknown-mingw32 && make && make check && make install"
# Finalization
  - cd installdir
  - set PATH=%cd%\bin;%PATH%
  - set LIB=%cd%\lib;%LIB%
  - set INCLUDE=%cd%\include;%INCLUDE%
  - set HUNSPELL_INCLUDE_DIR=%cd%\include
  - if %build_tool%==mingw set HUNSPELL_LIBRARIES=%cd%\lib\libhunspell-1.6.dll.a
  - if not %build_tool%==mingw set HUNSPELL_LIBRARIES=%cd%\lib\libhunspell.lib
  - 7z a libhunspell-%build_suite%_%arch_name%.zip *
  - mv libhunspell-%build_suite%_%arch_name%.zip %APPVEYOR_BUILD_FOLDER%
# tidy-html5
  - cd c:\dev
  - echo "Building tidy-html5"
  - git clone https://github.com/htacg/tidy-html5.git
  - cd tidy-html5
  - git checkout 5.6.0
  - md build-tidy
  - cd build-tidy
  - if %build_tool%==mingw set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - if not %build_tool%==mingw C:\msys64\usr\bin\bash -lc "cd /c/dev/tidy-html5 && echo 'install(FILES $<TARGET_PDB_FILE:${name}> DESTINATION bin OPTIONAL)' >> CMakeLists.txt"
  - cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIB=ON -DCMAKE_INSTALL_PREFIX="c:\dev\tidy-html5\build-tidy\installdir"
  - cmake --build . --target all
  - cmake --build . --target install
  - if not %build_tool%==mingw copy c:\dev\tidy-html5\build-tidy\CMakeFiles\tidy-static.dir\tidy-static.pdb c:\dev\tidy-html5\build-tidy\installdir\lib\
  - if %build_tool%==mingw set PATH=%PATH%;C:\Program Files\Git\usr\bin
# Finalization
  - cd installdir
  - set PATH=%PATH%;%cd%\bin
  - set LIB=%LIB%;%cd%\lib
  - set INCLUDE=%INCLUDE%;%cd%\include
  - 7z a tidy-html5-%build_suite%_%arch_name%.zip *
  - mv tidy-html5-%build_suite%_%arch_name%.zip %APPVEYOR_BUILD_FOLDER%
# qtkeychain
  - cd c:\dev
  - echo "Building qtkeychain"
  - git clone https://github.com/frankosterfeld/qtkeychain.git
  - cd c:\dev\qtkeychain
  - git checkout v0.8.0
  - if %build_suite%==mingw492_32 C:\msys64\usr\bin\bash -lc "cd /c/dev/qtkeychain && sed -i s/SecureZeroMemory/ZeroMemory/g keychain_win.cpp"
  - C:\msys64\usr\bin\bash -lc "cd /c/dev/qtkeychain && sed -i -e 's/\!USE_CREDENTIAL_STORE/NOT USE_CREDENTIAL_STORE/g' CMakeLists.txt"
  - md build
  - cd build
  - if %build_tool%==mingw set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - if not %build_tool%==mingw C:\msys64\usr\bin\bash -lc "cd /c/dev/qtkeychain && echo 'install(FILES $<TARGET_PDB_FILE:${QTKEYCHAIN_TARGET_NAME}> DESTINATION bin OPTIONAL)' >> CMakeLists.txt"
  - if not %build_tool%==mingw cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DUSE_CREDENTIAL_STORE=OFF -DCMAKE_INSTALL_PREFIX="c:\dev\qtkeychain\build\installdir" -DCMAKE_PREFIX_PATH="C:/Qt/5.9.2/%qt%
  - if %build_tool%==mingw cmake .. -G %makefiles% -DCMAKE_BUILD_TYPE=RelWithDebInfo -DUSE_CREDENTIAL_STORE=OFF -DCMAKE_INSTALL_PREFIX="c:\dev\qtkeychain\build\installdir" -DCMAKE_PREFIX_PATH="C:/Qt/5.5/%qt%
  - cmake --build . --target all
  - cmake --build . --target install
  - if %build_tool%==mingw set PATH=%PATH%;C:\Program Files\Git\usr\bin
# Finalization
  - cd installdir
  - set PATH=%PATH%;%cd%\bin
  - set LIB=%LIB%;%cd%\lib
  - set INCLUDE=%INCLUDE%;%cd%\include
  - 7z a qtkeychain-%build_suite%_%arch_name%.zip *
  - mv qtkeychain-%build_suite%_%arch_name%.zip %APPVEYOR_BUILD_FOLDER%
# Google breakpad
  - cd c:\dev
  - echo "Building breakpad"
# MSVC branch
  - if not %build_tool%==mingw git clone https://chromium.googlesource.com/breakpad/breakpad
  - if not %build_tool%==mingw cd breakpad
  - if not %build_tool%==mingw git checkout chrome_64
  - if not %build_tool%==mingw cd src
  - if not %build_tool%==mingw git clone https://github.com/google/googletest.git testing
  - if not %build_tool%==mingw cd ..\..
  - if not %build_tool%==mingw git clone https://chromium.googlesource.com/external/gyp
  - if not %build_tool%==mingw cd gyp
  - if not %build_tool%==mingw python setup.py install
  - if not %build_tool%==mingw cd ..\breakpad
  - if not %build_tool%==mingw md installdir
  - if not %build_tool%==mingw md installdir\include\breakpad\client\windows
  - if not %build_tool%==mingw md installdir\include\breakpad\common\windows
  - if not %build_tool%==mingw md installdir\lib
  - if not %build_tool%==mingw md installdir\bin
  - if not %build_tool%==mingw xcopy src installdir\include\breakpad /e
  - |
    if not %build_tool%==mingw C:\msys64\usr\bin\bash -lc "cd /c/dev/breakpad/src/build && sed -i -e \"s/'WarnAsError': 'true'/'WarnAsError': 'false'/g\" common.gypi"
  - if not %build_tool%==mingw ..\gyp\gyp.bat src\client\windows\breakpad_client.gyp --no-circular-check -Dwin_release_RuntimeLibrary=2 -Dwin_debug_RuntimeLibrary=3
  - if not %build_tool%==mingw cd src\client\windows
  - if %build_suite%==msvc2015 msbuild breakpad_client.sln /p:Configuration="Release" /p:Platform="Win32" /clp:ErrorsOnly
  - if %build_suite%==msvc2015 msbuild breakpad_client.sln /p:Configuration="Debug" /p:Platform="Win32" /clp:ErrorsOnly
  - if %build_suite%==msvc2017 msbuild breakpad_client.sln /p:Configuration="Release" /p:Platform="x64" /clp:ErrorsOnly
  - if %build_suite%==msvc2017 msbuild breakpad_client.sln /p:Configuration="Debug" /p:Platform="x64" /clp:ErrorsOnly
  - if not %build_tool%==mingw copy Release\lib\common.lib c:\dev\breakpad\installdir\lib
  - if not %build_tool%==mingw copy Release\lib\crash_generation_client.lib c:\dev\breakpad\installdir\lib
  - if not %build_tool%==mingw copy Release\lib\crash_generation_server.lib c:\dev\breakpad\installdir\lib
  - if not %build_tool%==mingw copy Release\lib\exception_handler.lib c:\dev\breakpad\installdir\lib
  - if not %build_tool%==mingw copy Debug\lib\common.lib c:\dev\breakpad\installdir\lib\common_d.lib
  - if not %build_tool%==mingw copy Debug\lib\crash_generation_client.lib c:\dev\breakpad\installdir\lib\crash_generation_client_d.lib
  - if not %build_tool%==mingw copy Debug\lib\crash_generation_server.lib c:\dev\breakpad\installdir\lib\crash_generation_server_d.lib
  - if not %build_tool%==mingw copy Debug\lib\exception_handler.lib c:\dev\breakpad\installdir\lib\exception_handler_d.lib
  - if not %build_tool%==mingw copy Debug\common.pdb c:\dev\breakpad\installdir\lib\
  - if not %build_tool%==mingw copy Debug\crash_generation_client.pdb c:\dev\breakpad\installdir\lib\
  - if not %build_tool%==mingw copy Debug\crash_generation_server.pdb c:\dev\breakpad\installdir\lib\
  - if not %build_tool%==mingw copy Debug\exception_handler.pdb c:\dev\breakpad\installdir\lib\
  - if not %build_tool%==mingw cd c:\dev\breakpad
  - if not %build_tool%==mingw ..\gyp\gyp.bat src\tools\windows\tools_windows.gyp --no-circular-check -Dwin_release_RuntimeLibrary=2 -Dwin_debug_RuntimeLibrary=3
  - if not %build_tool%==mingw cd src\tools\windows
  - if %build_suite%==msvc2015 msbuild tools_windows.sln /p:Configuration="Release" /p:Platform="Win32" /clp:ErrorsOnly
  - if %build_suite%==msvc2017 msbuild tools_windows.sln /p:Configuration="Release" /p:Platform="x64"  /clp:ErrorsOnly
  - if not %build_tool%==mingw copy Release\dump_syms.exe c:\dev\breakpad\installdir\bin
  - if not %build_tool%==mingw cd c:\dev\breakpad\installdir\bin
  - if not %build_tool%==mingw curl -fsSL http://hg.mozilla.org/build/tools/raw-file/755e58ebc9d4/breakpad/win32/minidump_stackwalk.exe -o minidump_stackwalk.exe
  - if not %build_tool%==mingw curl -fsSL http://hg.mozilla.org/build/tools/raw-file/755e58ebc9d4/breakpad/win32/cygwin1.dll -o cygwin1.dll
  - if not %build_tool%==mingw curl -fsSL http://hg.mozilla.org/build/tools/raw-file/755e58ebc9d4/breakpad/win32/cygstdc++-6.dll -o cygstdc++-6.dll
  - if not %build_tool%==mingw curl -fsSL http://hg.mozilla.org/build/tools/raw-file/755e58ebc9d4/breakpad/win32/cyggcc_s-1.dll -o cyggcc_s-1.dll
  - if not %build_tool%==mingw cd c:\dev\breakpad
# MinGW branch
  - if %build_tool%==mingw md breakpad
  - if %build_tool%==mingw git clone https://github.com/jon-turney/google-breakpad.git breakpad
  - if %build_tool%==mingw cd breakpad
  - if %build_tool%==mingw git checkout pecoff-dwarf-on-git-20171117
  - if %build_tool%==mingw git reset --hard 797ba26
  - if %build_tool%==mingw set APPVEYOR_BUILD_FOLDER_BAK=%APPVEYOR_BUILD_FOLDER%
  - if %build_tool%==mingw set APPVEYOR_BUILD_FOLDER=%cd%
  - if %build_tool%==mingw set PATH_BEFORE=%PATH%
  - if %build_tool%==mingw call scripts\appveyor-gcc.bat install
  - if %build_tool%==mingw call scripts\appveyor-gcc.bat build_script
  - if %build_tool%==mingw call scripts\appveyor-gcc.bat test_script
  - if %build_tool%==mingw set PATH=%PATH_BEFORE%
  - if %build_tool%==mingw set APPVEYOR_BUILD_FOLDER=%APPVEYOR_BUILD_FOLDER_BAK%
  - if %build_tool%==mingw mv staging\usr installdir
# Finalization
  - cd installdir
  - set LIB=%cd%\lib;%LIB%
  - set INCLUDE=%cd%\include;%INCLUDE%
  - set PATH=%cd%\bin;%PATH%
  - 7z a breakpad-%build_suite%_%arch_name%.zip *
  - mv breakpad-%build_suite%_%arch_name%.zip %APPVEYOR_BUILD_FOLDER%
# Boost (for MinGW only)
  - if %build_tool%==mingw echo "Building boost"
  - if %build_tool%==mingw md C:\Libraries\boost_1_63_0\MinGW-build
  - if %build_tool%==mingw cd C:\Libraries\boost_1_63_0\tools\build
  - if %build_tool%==mingw bootstrap.bat gcc
  - if %build_tool%==mingw .\b2 --prefix=..\..\b2_installdir install
  - if %build_tool%==mingw cd ..\..\b2_installdir\bin
  - if %build_tool%==mingw set PATH=%cd%;%PATH%
  - if %build_tool%==mingw cd ..\..\
  - if %build_tool%==mingw b2 --prefix=%cd%\mingw_installdir --build-dir=%cd%\mingw_builddir --with-program_options toolset=gcc link=shared install
# Rearrange the location of some stuff within the installation dir
  - if %build_tool%==mingw cd mingw_installdir
  - if %build_tool%==mingw move include\boost-1_63\boost include
  - if %build_tool%==mingw rmdir include\boost-1_63
  - if %build_tool%==mingw md bin
  - if %build_tool%==mingw move lib\libboost_program_options-mgw53-mt-d-1_63.dll bin\
  - if %build_tool%==mingw move lib\libboost_program_options-mgw53-mt-1_63.dll bin\
  - if %build_tool%==mingw set PATH=C:\Libraries\boost_1_63_0\mingw_installdir\bin;%PATH%
  - if %build_tool%==mingw set LIB=C:\Libraries\boost_1_63_0\mingw_installdir\lib;%LIB%
  - if %build_tool%==mingw set INCLUDE=C:\Libraries\boost_1_63_0\mingw_installdir\include;%INCLUDE%
# Finalization
  - if %build_tool%==mingw 7z a boost_mingw.zip *
  - if %build_tool%==mingw mv boost_mingw.zip %APPVEYOR_BUILD_FOLDER%

after_build:
  - cd %APPVEYOR_BUILD_FOLDER%
  - c:\dev\ciuploadtool\ciuploadtool.exe *.zip

cache:
 - C:\cache

artifacts:
 - path: '*.zip'
   name: archive

matrix:
  fast_finish: true
  allow_failures:
   - prepare_mode: YES
